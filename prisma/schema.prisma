// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  hash      String
  name      String?
  role      Role      @default(CUSTOMER)
  addresses Address[]
  orders    Order[]
  createdAt DateTime  @default(now())
}

enum Role {
  ADMIN
  STAFF
  CUSTOMER
}

enum Currency {
  ARS
  USD
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

model Category {
  id       String    @id @default(cuid())
  name     String
  slug     String    @unique
  products Product[]
}

model Product {
  id          String         @id @default(cuid())
  name        String
  slug        String         @unique
  description String?
  categoryId  String
  category    Category       @relation(fields: [categoryId], references: [id])
  variants    Variant[]
  images      ProductImage[]
  price       Decimal        @db.Decimal(10, 2)
  currency    Currency       @default(ARS)
  active      Boolean        @default(true)
  createdAt   DateTime       @default(now())
}

model Variant {
  id         String      @id @default(cuid())
  productId  String
  product    Product     @relation(fields: [productId], references: [id])
  sku        String      @unique
  color      String?
  size       String?
  stock      Int         @default(0)
  priceDiff  Decimal?    @db.Decimal(10, 2)
  orderItems OrderItem[]
}

model ProductImage {
  id        String  @id @default(cuid())
  productId String
  url       String
  alt       String?
  position  Int     @default(0)
  product   Product @relation(fields: [productId], references: [id])
}

model Address {
  id      String  @id @default(cuid())
  userId  String
  user    User    @relation(fields: [userId], references: [id])
  name    String?
  phone   String?
  street  String
  city    String
  state   String?
  zip     String?
  country String  @default("AR")
}

model Order {
  id        String      @id @default(cuid())
  userId    String?
  user      User?       @relation(fields: [userId], references: [id])
  status    OrderStatus @default(PENDING)
  total     Decimal     @db.Decimal(10, 2)
  currency  Currency    @default(ARS)
  mpPrefId  String?
  items     OrderItem[]
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  variantId String
  quantity  Int
  unitPrice Decimal @db.Decimal(10, 2)
  order     Order   @relation(fields: [orderId], references: [id])
  variant   Variant @relation(fields: [variantId], references: [id])
}
